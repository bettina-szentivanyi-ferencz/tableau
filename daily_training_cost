WITH cte_aws_list_of_dates_by_month_year AS

(

SELECT
    FORMAT_DATETIME('%Y-%m-%d',DATE(substring(billing_aws_labeled.identity_time_interval,1,10))) as date_full,
    FORMAT_DATETIME('%Y-%m-01',DATE(substring(billing_aws_labeled.identity_time_interval,1,10))) as date_month,
    FROM `cloud.billing_aws_labeled` billing_aws_labeled
    GROUP BY 
    date_full,
    date_month   
),

cte_aws_number_of_days AS 
(
SELECT
    cte_aws_list_of_dates_by_month_year.date_month,
    cte_aws_list_of_dates_by_month_year.date_full,
    COUNT(cte_aws_list_of_dates_by_month_year.date_full) OVER(PARTITION BY cte_aws_list_of_dates_by_month_year.date_month) as number_of_days
    FROM cte_aws_list_of_dates_by_month_year
    GROUP BY 
    cte_aws_list_of_dates_by_month_year.date_month,
    cte_aws_list_of_dates_by_month_year.date_full ),


cte_gcp_cost_distribution  AS
  
(SELECT
FORMAT_DATETIME('%Y-%m-01',billing_gcp_labeled.invoice_month) as billing_date,
project.id as project_name,
credits.type as credit_type,
billing_gcp_labeled.cost_allocation,
SUM(billing_gcp_labeled.cost) + SUM(IFNULL(credits.amount, 0)) as actual_cost,
'GCP' as cloud
FROM cloud.billing_gcp_labeled billing_gcp_labeled
LEFT JOIN UNNEST(credits) as credits
WHERE billing_gcp_labeled.invoice_month >= '2021-01-01'
AND lower(sku.description) NOT LIKE '%tax%'
GROUP BY 
billing_gcp_labeled.invoice_month
project_name,
credit_type,
billing_gcp_labeled.cost_allocation
),


cte_aws_cost_distribution  AS

(SELECT 
FORMAT_DATETIME('%Y-%m-01',billing_aws_labeled.bill_billing_period_start_date) as billing_date,
billing_aws_labeled.line_item_usage_account_id as project_name,
billing_aws_labeled.line_item_line_item_type as credit_type,
billing_aws_labeled.cost_allocation,
SUM(CASE
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanCoveredUsage') THEN
      billing_aws_labeled.savings_plan_savings_plan_effective_cost
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanRecurringFee') THEN
      (billing_aws_labeled.savings_plan_total_commitment_to_date - billing_aws_labeled.savings_plan_used_commitment)
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanNegation') THEN
      0
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanUpfrontFee') THEN
      0
      WHEN (billing_aws_labeled.line_item_line_item_type = 'DiscountedUsage') THEN
      billing_aws_labeled.reservation_effective_cost
      WHEN (billing_aws_labeled.line_item_line_item_type = 'RIFee') THEN
      (billing_aws_labeled.reservation_unused_amortized_upfront_fee_for_billing_period + billing_aws_labeled.reservation_unused_recurring_fee)
      WHEN ((billing_aws_labeled.line_item_line_item_type = 'Fee')
          AND (billing_aws_labeled.reservation_reservation_a_r_n <> '')) THEN
      0
      ELSE billing_aws_labeled.line_item_unblended_cost END) as actual_cost,
'AWS' as cloud 
FROM cloud.billing_aws_labeled billing_aws_labeled
WHERE  billing_aws_labeled.line_item_line_item_type != 'Tax'
GROUP BY
billing_aws_labeled.bill_billing_period_start_date,
billing_aws_labeled.line_item_usage_account_id,
billing_aws_labeled.line_item_line_item_type,
billing_aws_labeled.cost_allocation
),

cte_total_cost_distribution  AS

(
(SELECT 
cte_gcp_cost_distribution.billing_date,
cte_gcp_cost_distribution.project_name,
cte_gcp_cost_distribution.credit_type,
cte_gcp_cost_distribution.cost_allocation,
cte_gcp_cost_distribution.actual_cost,
cte_gcp_cost_distribution.cloud
FROM cte_gcp_cost_distribution cte_gcp_cost_distribution)
UNION ALL
(SELECT
cte_aws_cost_distribution.billing_date,
cte_aws_cost_distribution.project_name,
cte_aws_cost_distribution.credit_type,
cte_aws_cost_distribution.cost_allocation,
cte_aws_cost_distribution.actual_cost,
cte_aws_cost_distribution.cloud
FROM cte_aws_cost_distribution cte_aws_cost_distribution 
)
),

cte_discount_cost AS

(SELECT 
billing_date,
credit_type,
actual_cost
FROM cte_total_cost_distribution  
WHERE project_name = '619597279328'
AND cloud = 'AWS'
AND credit_type = 'EdpDiscount'),


cte_total_cost_before_dicount AS

(SELECT 
cte_cost_training.billing_date,
cte_cost_training.cost_allocation,
IF((cte_cost_training.project_name = '619597279328' AND cte_cost_training.cloud = 'AWS' AND cte_cost_training.credit_type = 'EdpDiscount'),0, cte_cost_training.actual_cost) as actual_cost,
cte_discount_cost.actual_cost as discount_cost,
SUM(cte_cost_training.actual_cost) OVER(PARTITION BY cte_cost_training.billing_date) as actual_total_cost,
SUM(cte_cost_training.actual_cost) OVER(PARTITION BY cte_cost_training.billing_date) - cte_discount_cost.actual_cost as total_cost_before_dicount
FROM cte_cost_training  cte_cost_training 
LEFT JOIN cte_discount_cost cte_discount_cost ON cte_discount_cost.billing_date = cte_cost_training.billing_date
WHERE cte_cost_training.project_name = '619597279328'
AND cte_cost_training.cloud = 'AWS'),



cte_discount_per_label AS
(
SELECT 
cte_total_cost_before_dicount.billing_date,
cte_total_cost_before_dicount.cost_allocation,
cte_total_cost_before_dicount.discount_cost,
SUM(cte_total_cost_before_dicount.actual_cost)/ SUM(DISTINCT(cte_total_cost_before_dicount.total_cost_before_dicount)) as percent_actual_cost,
(cte_total_cost_before_dicount.discount_cost * (SUM(cte_total_cost_before_dicount.actual_cost)/ SUM(DISTINCT(cte_total_cost_before_dicount.total_cost_before_dicount)))) as discount_per_label
FROM cte_total_cost_before_dicount
GROUP BY 
cte_total_cost_before_dicount.billing_date,
cte_total_cost_before_dicount.cost_allocation,
cte_total_cost_before_dicount.discount_cost
),

cte_discount_per_size as

(

    SELECT
    cte_discount_per_label.billing_date,
    cte_aws_number_of_days.date_full,
    cte_aws_number_of_days.number_of_days,
    SUM(discount_per_label) as discount_size
    FROM cte_discount_per_label cte_discount_per_label
    LEFT JOIN cte_aws_number_of_days ON cte_aws_number_of_days.date_month = cte_discount_per_label.billing_date
    WHERE cost_allocation = 'training'
    GROUP BY 
    cte_discount_per_label.billing_date,
    cte_aws_number_of_days.date_full,
    cte_aws_number_of_days.number_of_days
    
    ),


cte_discount_cppp  as

(
  SELECT 
    cte_discount_per_size.billing_date,
    cte_discount_per_size.date_full,
    IFNULL((cte_discount_per_size.discount_size/ cte_discount_per_size.number_of_days),0) AS discount_per_day
    FROM cte_discount_per_size),


cte_aws_cost_network_training  AS
(SELECT
FORMAT_DATETIME('%Y-%m-01',billing_aws_labeled.bill_billing_period_start_date) as billing_date,
FORMAT_DATETIME('%Y-%m-%d',DATE(substring(billing_aws_labeled.identity_time_interval,1,10))) as date,
'AWS' as cloud,
'Network' as databand_tag,
SUM(CASE
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanCoveredUsage') THEN
      billing_aws_labeled.savings_plan_savings_plan_effective_cost
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanRecurringFee') THEN
      (billing_aws_labeled.savings_plan_total_commitment_to_date - billing_aws_labeled.savings_plan_used_commitment)
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanNegation') THEN
      0
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanUpfrontFee') THEN
      0
      WHEN (billing_aws_labeled.line_item_line_item_type = 'DiscountedUsage') THEN
      billing_aws_labeled.reservation_effective_cost
      WHEN (billing_aws_labeled.line_item_line_item_type = 'RIFee') THEN
      (billing_aws_labeled.reservation_unused_amortized_upfront_fee_for_billing_period + billing_aws_labeled.reservation_unused_recurring_fee)
      WHEN ((billing_aws_labeled.line_item_line_item_type = 'Fee')
          AND (billing_aws_labeled.reservation_reservation_a_r_n <> '')) THEN
      0
      ELSE billing_aws_labeled.line_item_unblended_cost END) as total_cost_aws
FROM cloud.billing_aws_labeled billing_aws_labeled
WHERE 1=1
AND FORMAT_DATETIME('%Y-%m-01',billing_aws_labeled.bill_billing_period_start_date) >= '2021-01-01'
AND billing_aws_labeled.line_item_usage_account_id = '619597279328'
AND billing_aws_labeled.product_servicename = 'AWS Data Transfer'
AND (billing_aws_labeled.line_item_usage_type LIKE '%DataTransfer-Out-Bytes%'
OR  billing_aws_labeled.line_item_usage_type LIKE '%AWS-Out-Bytes%'
OR  billing_aws_labeled.line_item_usage_type LIKE '%AWS-Out-ABytes%')
AND billing_aws_labeled.line_item_product_code = 'AmazonS3'
AND billing_aws_labeled.bill_payer_account_id = '619597279328'
--AND billing_aws_labeled.cost_allocation = 'training' -- added by me, it was not part of the original view
GROUP BY
billing_aws_labeled.bill_billing_period_start_date,
billing_aws_labeled.identity_time_interval,
cloud,
databand_tag),

cte_aws_cost_others_training  AS
(SELECT 
FORMAT_DATETIME('%Y-%m-01',billing_aws_labeled.bill_billing_period_start_date) as billing_date,
FORMAT_DATETIME('%Y-%m-%d',DATE(substring(billing_aws_labeled.identity_time_interval,1,10))) as date,
'AWS' as cloud,
CASE when lower(billing_aws_labeled.resource_tags_user_name) LIKE '%research%' THEN 'Research'
when lower(billing_aws_labeled.resource_tags_user_service) LIKE '%research%' THEN 'Research'
when lower(billing_aws_labeled.resource_tags_user_name) LIKE '%prod-serving-training%' THEN 'Prod_Serving'
when lower(billing_aws_labeled.resource_tags_user_name) LIKE '%engine-dev%' THEN 'Engine_Dev'
when lower(billing_aws_labeled.resource_tags_user_name) LIKE '%autocoach%' THEN 'Autodeploy'
when lower(billing_aws_labeled.resource_tags_user_name) LIKE '%databand%' THEN 'Autodeploy'
when lower(billing_aws_labeled.resource_tags_user_service) LIKE '%databand%' THEN 'Autodeploy'
when lower(billing_aws_labeled.resource_tags_user_name) LIKE '%simon%' THEN 'Autodeploy'
when lower(billing_aws_labeled.resource_tags_user_name) LIKE '%tester%' THEN 'Autodeploy'
when lower(billing_aws_labeled.resource_tags_user_name) LIKE '%training%' THEN 'Autodeploy'
when lower(billing_aws_labeled.resource_tags_user_service) LIKE '%training%' THEN 'Autodeploy'
when lower(billing_aws_labeled.resource_tags_user_service) LIKE '%trainer%' THEN 'Research'
when lower(billing_aws_labeled.resource_tags_user_service) LIKE '%trainer%' THEN 'Research'
when lower(billing_aws_labeled.resource_tags_user_service) LIKE '%prod-autocoach-simon-cpu-on-demand-eks_asg%' THEN 'Platform Training Cost'
when lower(billing_aws_labeled.resource_tags_user_service) LIKE '%prod-autocoach%' THEN 'Platform Training Cost'
ELSE 'Platform Training Cost' END AS databand_tag,
SUM(CASE
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanCoveredUsage') THEN
      savings_plan_savings_plan_effective_cost
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanRecurringFee') THEN
      (billing_aws_labeled.savings_plan_total_commitment_to_date - savings_plan_used_commitment)
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanNegation') THEN
      0
      WHEN (billing_aws_labeled.line_item_line_item_type = 'SavingsPlanUpfrontFee') THEN
      0
      WHEN (billing_aws_labeled.line_item_line_item_type = 'DiscountedUsage') THEN
      billing_aws_labeled.reservation_effective_cost
      WHEN (billing_aws_labeled.line_item_line_item_type = 'RIFee') THEN
      (billing_aws_labeled.reservation_unused_amortized_upfront_fee_for_billing_period + billing_aws_labeled.reservation_unused_recurring_fee)
      WHEN ((billing_aws_labeled.line_item_line_item_type = 'Fee')
          AND (billing_aws_labeled.reservation_reservation_a_r_n <> '')) THEN
      0
      ELSE billing_aws_labeled.line_item_unblended_cost END) as total_cost_aws
FROM cloud.billing_aws_labeled billing_aws_labeled
WHERE billing_aws_labeled.cost_allocation = 'training'
AND FORMAT_DATETIME('%Y-%m-01',bill_billing_period_start_date) >= '2021-01-01'
GROUP BY 
billing_aws_labeled.bill_billing_period_start_date,
billing_aws_labeled.identity_time_interval,
cloud,
databand_tag
),

cte_total_aws_cost_training  AS
(
(SELECT
 cte_aws_cost_network_training.billing_date,
 cte_aws_cost_network_training.date,
 cte_aws_cost_network_training.cloud,
 cte_aws_cost_network_training.databand_tag,
 cte_aws_cost_network_training.total_cost_aws
  from cte_aws_cost_network_training cte_aws_cost_network_training)
  UNION ALL
  (SELECT 
 cte_aws_cost_others_training.billing_date,
 cte_aws_cost_others_training.date,
 cte_aws_cost_others_training.cloud,
 cte_aws_cost_others_training.databand_tag,
 cte_aws_cost_others_training.total_cost_aws
from cte_aws_cost_others_training cte_aws_cost_others_training)
),

daily_training_aws as

(
SELECT 
DATE(cte_total_aws_cost_training.billing_date) as billing_date,
DATE(date) as date,
cte_total_aws_cost_training.cloud,
cte_total_aws_cost_training.databand_tag,
cte_discount_cppp.discount_per_day * (cte_total_aws_cost_training.total_cost_aws/ (SUM(cte_total_aws_cost_training.total_cost_aws) OVER(PARTITION BY date))) as discount_per_day,
cte_total_aws_cost_training.total_cost_aws as daily_cost_without_discount,
(discount_per_day * (cte_total_aws_cost_training.total_cost_aws/ (SUM(cte_total_aws_cost_training.total_cost_aws) OVER(PARTITION BY date)))) + cte_total_aws_cost_training.total_cost_aws as daily_cost
FROM cte_total_aws_cost_training cte_total_aws_cost_training 
LEFT JOIN cte_discount_cppp cte_discount_cppp ON DATE(cte_discount_cppp.date_full)= DATE(cte_total_aws_cost_training.date)
),


cte_daily_gcp_cost_training  AS
  
(
SELECT 
billing_gcp_labeled.invoice_month as billing_date,
EXTRACT(date FROM billing_gcp_labeled.usage_start_time) as date,
'GCP' as cloud,
'No Tag' as databand_tag,
sum(billing_gcp_labeled.cost) as gcp_cost
FROM `cloud.billing_gcp_labeled` billing_gcp_labeled
WHERE billing_gcp_labeled.cost_allocation = 'training'
AND billing_gcp_labeled.invoice_month >= '2021-01-01'
GROUP BY 
billing_gcp_labeled.invoice_month,
date
),

daily_training_gcp as

(SELECT 
DATE(FORMAT_DATETIME('%Y-%m-01' ,DATE(IF ((EXTRACT(MONTH from cte_daily_gcp_cost_training.billing_date) = EXTRACT(MONTH from date)), cte_daily_gcp_cost_training.billing_date, date)))) as billing_date,
cte_daily_gcp_cost_training.date,
cte_daily_gcp_cost_training.cloud as cloud,
cte_daily_gcp_cost_training.databand_tag as databand_tag,
0 as discount_per_day,
SUM(cte_daily_gcp_cost_training.gcp_cost) as daily_cost_without_discount,
0 + SUM(cte_daily_gcp_cost_training.gcp_cost) as daily_cost
FROM cte_daily_gcp_cost_training cte_daily_gcp_cost_training
GROUP BY 
billing_date,
date,
cloud,
databand_tag,
discount_per_day)

(
(select
billing_date,
date,
cloud,
databand_tag,
discount_per_day,
daily_cost_without_discount,
daily_cost
from daily_training_aws)
UNION ALL
(select
billing_date,
date,
cloud,
databand_tag,
discount_per_day,
daily_cost_without_discount,
daily_cost
from daily_training_gcp)
)
